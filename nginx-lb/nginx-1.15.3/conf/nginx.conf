
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
					  '$upstream_addr "$upstream_status" ${upstream_response_time}';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	
	#开启Nginx Gzip压缩
    gzip on;
	#只有超过1K的文件才压缩
	gzip_min_length 1k;
	#说明那些类型的文件在传输前进行压缩
	# image/jpeg类似的图片文件本身就已经是进过压缩的文件，对其gzip压缩后效果并不明显
	# gzip对于文本文件的效果极好
	gzip_types text/plain application/javascript text/css application/x-javascript application/font-woff;
	
	#低版本IE禁用Gzip压缩
	gzip_disable "MSIE [1-6]\.";
	
	#压缩使用的缓存，每个内存页为4K ，申请32倍，一般我们写这个就行
	gzip_buffers 32 4k;
	
	#压轴的，设置压缩级别 1-9 越大压缩比越高，但浪费的CPU资源也越多
	#建议1-4即可
	gzip_comp_level 1;
	
	
	
	
	#代表了临时文件夹
	proxy_temp_path d:/nginx-temp;
	#设置缓存目录
	#levels代表采用1:2也就是两级目录的形式保存缓存文件（静态资源css、js)，同时文件名进行了md5编码
	#keys_zone定义缓存的名称及内存的使用，名称为babytun-cache ,在内存中开始100m交换空间
	#inactive=7d 如果某个缓存文件超过7天没有被访问，则删除
	# max_size=20g;代表设置文件夹最大不能超过20g，超过后会自动将访问频度（命中率）最低的缓存文件删除
	proxy_cache_path d:/nginx-cache levels=1:2 keys_zone=babytun-cache:100m inactive=7d max_size=20g;
	
	#后端服务器池
	upstream babytun {
		#最少连接策略
		#least_conn; 
		#IP绑定策略
		#ip_hash;
		server 192.168.31.182:8001 weight=5 max_fails=1 fail_timeout=3s;
		server 192.168.31.182:8002 weight=2;
		server 192.168.31.182:8003 weight=1;
		server 192.168.31.182:8004 weight=2;
	}

	server {
		#nginx通过80端口提供服务
		listen 80;
		#静态资源缓存
		#利用正则表达式匹配url，匹配成功的则执行内部逻辑
		#~* 不区分大小写
		location ~* \.(gif|jpg|css|png|js|woff|html)(.*){
			proxy_pass http://babytun;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache babytun-cache;
			#如果静态资源响应状态码为200（成功)  302(暂时性重定向）时 缓存文件有效期1天
			proxy_cache_valid 200 302 24h;
			#301(永久性重定向）缓存保存5天
			proxy_cache_valid 301 5d;
			#其他情况
			proxy_cache_valid any 5m;
			
			#浏览器的缓存时间
			expires 90d;
			
		}
		
		#使用babytun服务器池进行后端处理
		location /{
			proxy_pass http://babytun; 
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
	}
}
